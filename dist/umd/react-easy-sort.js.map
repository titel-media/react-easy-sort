{"version":3,"file":"react-easy-sort.js","sources":["../../src/helpers.ts","../../src/hooks.ts","../../src/index.tsx"],"sourcesContent":["import { Point } from './types'\n\n/**\n * This function check if a given point is inside of the items rect.\n * If it's not inside any rect, it will return the index of the closest rect\n */\nexport const findItemIndexAtPosition = (\n  { x, y }: Point,\n  itemsRect: DOMRect[],\n  { fallbackToClosest = false } = {}\n): number => {\n  let smallestDistance = 10000\n  let smallestDistanceIndex = -1\n  for (let index = 0; index < itemsRect.length; index += 1) {\n    const rect = itemsRect[index]\n    // if it's inside the rect, we return the current index directly\n    if (x >= rect.left && x < rect.right && y >= rect.top && y < rect.bottom) {\n      return index\n    }\n    if (fallbackToClosest) {\n      // otherwise we compute the distance and update the smallest distance index if needed\n      const itemCenterX = (rect.left + rect.right) / 2\n      const itemCenterY = (rect.top + rect.bottom) / 2\n\n      const distance = Math.sqrt(Math.pow(x - itemCenterX, 2) + Math.pow(y - itemCenterY, 2)) // ** 2 operator is not supported on IE11\n      if (distance < smallestDistance) {\n        smallestDistance = distance\n        smallestDistanceIndex = index\n      }\n    }\n  }\n  return smallestDistanceIndex\n}\n","import React from 'react'\n\nimport { Point } from './types'\n\nconst getMousePoint = (e: MouseEvent | React.MouseEvent): Point => ({\n  x: Number(e.clientX),\n  y: Number(e.clientY),\n})\n\nconst getTouchPoint = (touch: Touch | React.Touch): Point => ({\n  x: Number(touch.clientX),\n  y: Number(touch.clientY),\n})\n\nconst getPointInContainer = (point: Point, containerTopLeft: Point): Point => {\n  return {\n    x: point.x - containerTopLeft.x,\n    y: point.y - containerTopLeft.y,\n  }\n}\n\nconst preventDefault = (event: Event) => {\n  event.preventDefault()\n}\n\nconst disableContextMenu = () => {\n  window.addEventListener('contextmenu', preventDefault, { capture: true, passive: false })\n}\n\nconst enableContextMenu = () => {\n  window.removeEventListener('contextmenu', preventDefault)\n}\n\nexport type OnStartArgs = { point: Point; pointInWindow: Point }\nexport type OnMoveArgs = { point: Point; pointInWindow: Point }\n\ntype UseDragProps = {\n  onStart?: (args: OnStartArgs) => void\n  onMove?: (args: OnMoveArgs) => void\n  onEnd?: () => void\n  containerRef: React.MutableRefObject<HTMLDivElement | null>\n}\n\nexport const useDrag = ({ onStart, onMove, onEnd, containerRef }: UseDragProps) => {\n  // contains the top-left coordinates of the container in the window. Set on drag start and used in drag move\n  const containerPositionRef = React.useRef<Point>({ x: 0, y: 0 })\n  // on touch devices, we only start the drag gesture after pressing the item 200ms.\n  // this ref contains the timer id to be able to cancel it\n  const handleTouchStartTimerRef = React.useRef<number | undefined>(undefined)\n  // on non-touch device, we don't call onStart on mouse down but on the first mouse move\n  // we do this to let the user clicks on clickable element inside the container\n  // this means that the drag gesture actually starts on the fist move\n  const isFirstMoveRef = React.useRef(false)\n  // see https://twitter.com/ValentinHervieu/status/1324407814970920968\n  // we do this so that the parent doesn't have to use `useCallback()` for these callbacks\n  const callbacksRef = React.useRef({ onStart, onMove, onEnd })\n\n  // instead of relying on hacks to know if the device is a touch device or not,\n  // we track this using an onTouchStart listener on the document. (see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685)\n  const [isTouchDevice, setTouchDevice] = React.useState(false)\n\n  React.useEffect(() => {\n    callbacksRef.current = { onStart, onMove, onEnd }\n  }, [onStart, onMove, onEnd])\n\n  const cancelTouchStart = () => {\n    if (handleTouchStartTimerRef.current) {\n      window.clearTimeout(handleTouchStartTimerRef.current)\n    }\n  }\n\n  const saveContainerPosition = React.useCallback(() => {\n    if (containerRef.current) {\n      const bounds = containerRef.current.getBoundingClientRect()\n      containerPositionRef.current = { x: bounds.left, y: bounds.top }\n    }\n  }, [containerRef])\n\n  const onDrag = React.useCallback((pointInWindow: Point) => {\n    const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n    if (callbacksRef.current.onMove) {\n      callbacksRef.current.onMove({ pointInWindow, point })\n    }\n  }, [])\n\n  const onMouseMove = React.useCallback(\n    (e: MouseEvent) => {\n      // if this is the first move, we trigger the onStart logic\n      if (isFirstMoveRef.current) {\n        isFirstMoveRef.current = false\n        const pointInWindow = getMousePoint(e)\n        const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n        if (callbacksRef.current.onStart) {\n          callbacksRef.current.onStart({ point, pointInWindow })\n        }\n      }\n      // otherwise, we do the normal move logic\n      else {\n        onDrag(getMousePoint(e))\n      }\n    },\n    [onDrag]\n  )\n\n  const onTouchMove = React.useCallback(\n    (e: TouchEvent) => {\n      if (e.cancelable) {\n        // Prevent the whole page from scrolling\n        e.preventDefault()\n        onDrag(getTouchPoint(e.touches[0]))\n      } else {\n        // if the event is not cancelable, it means the browser is currently scrolling\n        // which cannot be interrupted. Thus we cancel the drag gesture.\n        document.removeEventListener('touchmove', onTouchMove)\n        if (callbacksRef.current.onEnd) {\n          callbacksRef.current.onEnd()\n        }\n      }\n    },\n    [onDrag]\n  )\n\n  const onMouseUp = React.useCallback(() => {\n    isFirstMoveRef.current = false\n    document.removeEventListener('mousemove', onMouseMove)\n    document.removeEventListener('mouseup', onMouseUp)\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onMouseMove])\n\n  const onTouchEnd = React.useCallback(() => {\n    document.removeEventListener('touchmove', onTouchMove)\n    document.removeEventListener('touchend', onTouchEnd)\n    enableContextMenu()\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onTouchMove])\n\n  const onMouseDown = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (e.button !== 0) {\n        // we don't want to handle clicks other than left ones\n        return\n      }\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener('mouseup', onMouseUp)\n\n      saveContainerPosition()\n\n      // mark the next move as being the first one\n      isFirstMoveRef.current = true\n    },\n    [onMouseMove, onMouseUp, saveContainerPosition]\n  )\n\n  const handleTouchStart = React.useCallback(\n    (point: Point, pointInWindow: Point) => {\n      document.addEventListener('touchmove', onTouchMove, { capture: false, passive: false })\n      document.addEventListener('touchend', onTouchEnd)\n      disableContextMenu()\n\n      if (callbacksRef.current.onStart) {\n        callbacksRef.current.onStart({ point, pointInWindow })\n      }\n    },\n    [onTouchEnd, onTouchMove]\n  )\n\n  const onTouchStart = React.useCallback(\n    (e: TouchEvent) => {\n      saveContainerPosition()\n\n      const pointInWindow = getTouchPoint(e.touches[0])\n      const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n\n      // we wait 120ms to start the gesture to be sure that the user\n      // is not trying to scroll the page\n      handleTouchStartTimerRef.current = window.setTimeout(\n        () => handleTouchStart(point, pointInWindow),\n        120\n      )\n    },\n    [handleTouchStart, saveContainerPosition]\n  )\n\n  const detectTouchDevice = React.useCallback(() => {\n    setTouchDevice(true)\n    document.removeEventListener('touchstart', detectTouchDevice)\n  }, [])\n\n  // if the user is scrolling on mobile, we cancel the drag gesture\n  const touchScrollListener = React.useCallback(() => {\n    cancelTouchStart()\n  }, [])\n\n  React.useLayoutEffect(() => {\n    if (isTouchDevice) {\n      const container = containerRef.current\n      container?.addEventListener('touchstart', onTouchStart, { capture: true, passive: false })\n      // we are adding this touchmove listener to cancel drag if user is scrolling\n      // however, it's also important to have a touchmove listener always set\n      // with non-capture and non-passive option to prevent an issue on Safari\n      // with e.preventDefault (https://github.com/atlassian/react-beautiful-dnd/issues/1374)\n      document.addEventListener('touchmove', touchScrollListener, {\n        capture: false,\n        passive: false,\n      })\n      document.addEventListener('touchend', touchScrollListener, {\n        capture: false,\n        passive: false,\n      })\n\n      return () => {\n        container?.removeEventListener('touchstart', onTouchStart)\n        document.removeEventListener('touchmove', touchScrollListener)\n        document.removeEventListener('touchend', touchScrollListener)\n        document.removeEventListener('touchmove', onTouchMove)\n        document.removeEventListener('touchend', onTouchEnd)\n        enableContextMenu()\n        cancelTouchStart()\n      }\n    }\n    // if non-touch device\n    document.addEventListener('touchstart', detectTouchDevice)\n    return () => {\n      document.removeEventListener('touchstart', detectTouchDevice)\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n    }\n  }, [\n    isTouchDevice,\n    detectTouchDevice,\n    onMouseMove,\n    onTouchMove,\n    touchScrollListener,\n    onTouchEnd,\n    onMouseUp,\n    containerRef,\n    onTouchStart,\n  ])\n\n  // on touch devices, we cannot attach the onTouchStart directly via React:\n  // Touch handlers must be added with {passive: false} to be cancelable.\n  // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n  return isTouchDevice ? {} : { onMouseDown }\n}\n","import arrayMove from 'array-move'\nimport React, { HTMLAttributes } from 'react'\n\nimport { findItemIndexAtPosition } from './helpers'\nimport { useDrag } from './hooks'\nimport { Point } from './types'\n\ntype Props = HTMLAttributes<HTMLDivElement> & {\n  children: React.ReactNode\n  /** Called when the user finishes a sorting gesture. */\n  onSortEnd: (oldIndex: number, newIndex: number) => void\n  /** Class applied to the item being dragged */\n  draggedItemClassName?: string\n}\n\n// this context is only used so that SortableItems can register/remove themselves\n// from the items list\ntype Context = {\n  registerItem: ({item, index}: {item: HTMLDivElement, index: number}) => void\n  removeItem: (item: HTMLDivElement) => void\n}\n\nconst SortableListContext = React.createContext<Context | undefined>(undefined)\n\nconst SortableList = ({ children, onSortEnd, draggedItemClassName, ...rest }: Props) => {\n  // this array contains the elements than can be sorted (wrapped inside SortableItem)\n  const itemsRef = React.useRef<HTMLElement[]>([])\n  // this array contains the coordinates of each sortable element (only computed on dragStart and used in dragMove for perf reason)\n  const itemsRect = React.useRef<DOMRect[]>([])\n  // contains the container element\n  const containerRef = React.useRef<HTMLDivElement | null>(null)\n  // contains the target element (copy of the source element)\n  const targetRef = React.useRef<HTMLElement | null>(null)\n  // contains the index in the itemsRef array of the element being dragged\n  const sourceIndexRef = React.useRef<number | undefined>(undefined)\n  // contains the index in the itemsRef of the element to be exchanged with the source item\n  const lastTargetIndexRef = React.useRef<number | undefined>(undefined)\n\n  React.useEffect(() => {\n    return () => {\n      // cleanup the target element from the DOM when SortableList in unmounted\n      if (targetRef.current) {\n        document.body.removeChild(targetRef.current)\n      }\n    }\n  }, [])\n\n  const updateTargetPosition = (position: Point) => {\n    if (targetRef.current) {\n      // we use `translate3d` to force using the GPU if available\n      targetRef.current.style.transform = `translate(-50%, -50%) translate3d(${position.x}px, ${position.y}px, 0px)`\n    }\n  }\n\n  const copyItem = React.useCallback(\n    (sourceIndex: number) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      const source = itemsRef.current[sourceIndex]\n      const sourceRect = itemsRect.current[sourceIndex]\n\n      const copy = source.cloneNode(true) as HTMLElement\n\n      // added the \"dragged\" class name\n      if (draggedItemClassName) {\n        draggedItemClassName.split(' ').forEach((c) => copy.classList.add(c))\n      }\n\n      // we ensure the copy has the same size than the source element\n      copy.style.width = `${sourceRect.width}px`\n      copy.style.height = `${sourceRect.height}px`\n      // we place the target starting position at the top-left of the container\n      // it will then be moved relatively using `transform: translate3d()`\n      const containerBounds = containerRef.current.getBoundingClientRect()\n      copy.style.position = 'fixed'\n      copy.style.top = `${containerBounds.top}px`\n      copy.style.left = `${containerBounds.left}px`\n\n      document.body.appendChild(copy)\n\n      targetRef.current = copy\n    },\n    [draggedItemClassName]\n  )\n\n  const listeners = useDrag({\n    containerRef,\n    onStart: ({ point, pointInWindow }) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      itemsRect.current = itemsRef.current.map((item) => item.getBoundingClientRect())\n\n      const sourceIndex = findItemIndexAtPosition(pointInWindow, itemsRect.current)\n      // if we are not starting the drag gesture on a SortableItem, we exit early\n      if (sourceIndex === -1) {\n        return\n      }\n\n      // saving the index of the item being dragged\n      sourceIndexRef.current = sourceIndex\n\n      // the item being dragged is copied to the document body and will be used as the target\n      copyItem(sourceIndex)\n      updateTargetPosition(point)\n\n      // hide source during the drag gesture\n      const source = itemsRef.current[sourceIndex]\n      source.style.opacity = '0'\n      source.style.visibility = 'hidden'\n\n      // Adds a nice little physical feedback\n      if (window.navigator.vibrate) {\n        window.navigator.vibrate(100)\n      }\n    },\n    onMove: ({ point, pointInWindow }) => {\n      updateTargetPosition(point)\n\n      const sourceIndex = sourceIndexRef.current\n      // if there is no source, we exit early (happened when drag gesture was started outside a SortableItem)\n      if (sourceIndex === undefined) {\n        return\n      }\n\n      const targetIndex = findItemIndexAtPosition(pointInWindow, itemsRect.current, {\n        fallbackToClosest: true,\n      })\n      // if not target detected, we don't need to update other items' position\n      if (targetIndex === -1) {\n        return\n      }\n      // we keep track of the last target index (to be passed to the onSortEnd callback)\n      lastTargetIndexRef.current = targetIndex\n\n      const isMovingRight = sourceIndex < targetIndex\n\n      // in this loop, we go over each sortable item and see if we need to update their position\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        const currentItemRect = itemsRect.current[index]\n        // if current index is between sourceIndex and targetIndex, we need to translate them\n        if (\n          (isMovingRight && index >= sourceIndex && index <= targetIndex) ||\n          (!isMovingRight && index >= targetIndex && index <= sourceIndex)\n        ) {\n          // we need to move the item to the previous or next item position\n          const nextItemRects = itemsRect.current[isMovingRight ? index - 1 : index + 1]\n          if (nextItemRects) {\n            const translateX = nextItemRects.left - currentItemRect.left\n            const translateY = nextItemRects.top - currentItemRect.top\n            // we use `translate3d` to force using the GPU if available\n            currentItem.style.transform = `translate3d(${translateX}px, ${translateY}px, 0px)`\n          }\n        }\n        // otherwise, the item should be at its original position\n        else {\n          currentItem.style.transform = 'translate3d(0,0,0)'\n        }\n        // we want the translation to be animated\n        currentItem.style.transitionDuration = '300ms'\n      }\n    },\n    onEnd: () => {\n      // we reset all items translations (the parent is expected to sort the items in the onSortEnd callback)\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        currentItem.style.transform = ''\n        currentItem.style.transitionDuration = ''\n      }\n\n      const sourceIndex = sourceIndexRef.current\n      if (sourceIndex !== undefined) {\n        // show the source item again\n        const source = itemsRef.current[sourceIndex]\n        if (source) {\n          source.style.opacity = '1'\n          source.style.visibility = ''\n        }\n\n        const targetIndex = lastTargetIndexRef.current\n        if (targetIndex !== undefined) {\n          if (sourceIndex !== targetIndex) {\n            // sort our internal items array\n            itemsRef.current = arrayMove(itemsRef.current, sourceIndex, targetIndex)\n            // let the parent know\n            onSortEnd(sourceIndex, targetIndex)\n          }\n        }\n      }\n      sourceIndexRef.current = undefined\n      lastTargetIndexRef.current = undefined\n\n      // cleanup the target element from the DOM\n      if (targetRef.current) {\n        document.body.removeChild(targetRef.current)\n        targetRef.current = null\n      }\n    },\n  })\n\n  const registerItem = React.useCallback(({ item, index }: { item: HTMLDivElement, index: number }) => {\n    const existingIndex = itemsRef.current.indexOf(item)\n\n    if (existingIndex === -1) {\n      itemsRef.current.push(item)\n    } \n    \n    if (existingIndex !== index) {\n      arrayMove(itemsRef.current, existingIndex, index)\n    }\n  }, [])\n\n  const removeItem = React.useCallback((item: HTMLDivElement) => {\n    const index = itemsRef.current.indexOf(item)\n    if (index !== -1) {\n      itemsRef.current.splice(index, 1)\n    }\n  }, [])\n\n  // we need to memoize the context to avoid re-rendering every children of the context provider\n  // when not needed\n  const context = React.useMemo(() => ({ registerItem, removeItem }), [registerItem, removeItem])\n\n  return (\n    <div {...listeners} {...rest} ref={containerRef}>\n      <SortableListContext.Provider value={context}>{children}</SortableListContext.Provider>\n    </div>\n  )\n}\n\nexport default SortableList\n\ntype ItemProps = {\n  children: React.ReactElement,\n  index: number\n}\n\n/**\n * SortableItem only adds a ref to its children so that we can register it to the main Sortable\n */\nexport const SortableItem = ({ children, index }: ItemProps) => {\n  const context = React.useContext(SortableListContext)\n  if (!context) {\n    throw new Error('SortableItem must be a child of SortableList')\n  }\n  const { registerItem, removeItem } = context\n  const elementRef = React.useRef<HTMLDivElement | null>(null)\n\n  React.useEffect(() => {\n    const currentItem = elementRef.current\n    if (currentItem) {\n      registerItem({ item: currentItem, index })\n    }\n\n    return () => {\n      if (currentItem) {\n        removeItem(currentItem)\n      }\n    }\n  })\n\n  return React.cloneElement(children, { ref: elementRef })\n}\n"],"names":["findItemIndexAtPosition","_a","itemsRect","_b","x","y","_c","fallbackToClosest","smallestDistance","smallestDistanceIndex","index","length","rect","left","right","top","bottom","itemCenterX","itemCenterY","distance","Math","sqrt","pow","getMousePoint","e","Number","clientX","clientY","getTouchPoint","touch","getPointInContainer","point","containerTopLeft","preventDefault","event","disableContextMenu","window","addEventListener","capture","passive","enableContextMenu","removeEventListener","useDrag","onStart","onMove","onEnd","containerRef","containerPositionRef","React","useRef","handleTouchStartTimerRef","undefined","isFirstMoveRef","callbacksRef","useState","isTouchDevice","setTouchDevice","useEffect","current","cancelTouchStart","clearTimeout","saveContainerPosition","useCallback","bounds","getBoundingClientRect","onDrag","pointInWindow","onMouseMove","onTouchMove","cancelable","touches","document","onMouseUp","onTouchEnd","onMouseDown","button","handleTouchStart","onTouchStart","setTimeout","detectTouchDevice","touchScrollListener","useLayoutEffect","container_1","SortableListContext","createContext","SortableList","children","onSortEnd","draggedItemClassName","rest","itemsRef","targetRef","sourceIndexRef","lastTargetIndexRef","body","removeChild","updateTargetPosition","position","style","transform","copyItem","sourceIndex","source","sourceRect","copy","cloneNode","split","forEach","c","classList","add","width","height","containerBounds","appendChild","listeners","map","item","opacity","visibility","navigator","vibrate","targetIndex","isMovingRight","currentItem","currentItemRect","nextItemRects","translateX","translateY","transitionDuration","arrayMove","registerItem","existingIndex","indexOf","push","removeItem","splice","context","useMemo","ref","Provider","value","SortableItem","useContext","Error","elementRef","cloneElement"],"mappings":"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"}